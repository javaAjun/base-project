<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.palmble.dal.ZsGoodsCategoryMapper" >
  <resultMap id="BaseResultMap" type="com.palmble.entity.ZsGoodsCategory" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="parentId" property="parentId" jdbcType="INTEGER" />
    <result column="catName" property="catName" jdbcType="VARCHAR" />
    <result column="catSort" property="catSort" jdbcType="INTEGER" />
    <result column="state" property="state"  />
    <result column="goodsCateImg" property="goodsCateImg"  />
    <result column="pcatName" property="pcatName"  />
  </resultMap>
  <sql id="Base_Column_List" >
    id, parentId, catName, catSort,state,goodsCateImg
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from zs_goods_category
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from zs_goods_category
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.palmble.entity.ZsGoodsCategory" >
    insert into zs_goods_category (id, parentId, catName, 
      catSort)
    values (#{id,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER}, #{catName,jdbcType=VARCHAR}, 
      #{catSort,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.palmble.entity.ZsGoodsCategory" >
    insert into zs_goods_category
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="parentId != null" >
        parentId,
      </if>
      <if test="catName != null" >
        catName,
      </if>
      <if test="catSort != null" >
        catSort,
      </if>
      <if test="state!=null">state,</if>
      <if test="goodsCateImg!=null">goodsCateImg,</if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="catName != null" >
        #{catName,jdbcType=VARCHAR},
      </if>
      <if test="catSort != null" >
        #{catSort,jdbcType=INTEGER},
      </if>
      <if test="state!=null">#{state},</if>
      <if test="goodsCateImg!=null">#{goodsCateImg},</if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.palmble.entity.ZsGoodsCategory" >
    update zs_goods_category
    <set >
      <if test="parentId != null" >
        parentId = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="catName != null" >
        catName = #{catName,jdbcType=VARCHAR},
      </if>
      <if test="catSort != null" >
        catSort = #{catSort,jdbcType=INTEGER},
      </if>
      <if test="state!=null">state=#{state},</if>
       <if test="goodsCateImg!=null">goodsCateImg=#{goodsCateImg},</if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.palmble.entity.ZsGoodsCategory" >
    update zs_goods_category
    set parentId = #{parentId,jdbcType=INTEGER},
      catName = #{catName,jdbcType=VARCHAR},
      catSort = #{catSort,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getChildlevel" resultType="java.util.Map">
      SELECT
			zc.catName,	zp.catName pCatName,
		    zc.id,
		    zc.catSort
		    <if test="goodsGateId!=null">
		    	,CASE zc.id WHEN #{goodsGateId} THEN true   ELSE false END as flag
		    </if>
		    
		FROM
			zs_goods_category zp
		LEFT JOIN zs_goods_category zc ON zp.id = zc.parentId
		WHERE
		  1=1
			 <if test="pid!=null"> and zc.parentId = #{pid}</if>
  
  </select>
<!--   <select id="getPageGoodsCateInfo" resultType="java.util.Map" > -->
<select id="getGoodsCateLevel" resultMap="BaseResultMap">
    SELECT
			zc.*,
		      CASE 
		         WHEN ISNULL(zp.catName) THEN '顶级分类'
		         
		         ELSE zp.catName END AS pcatName
		FROM
			zs_goods_category zc 
            LEFT JOIN zs_goods_category zp ON zc.parentId=zp.id
		where 1=1  and zc.state=1
		 <if test="value!=null and value!=''">
		    and	 zc.catName LIKE '%${value}%'
		</if>
		<if test="pid!=null">
		  AND zc.parentId=#{pid}
		</if>
		ORDER BY	zc.catSort DESC
</select>
  <select id="getPageGoodsCateInfo" resultMap="BaseResultMap" >
		 SELECT
			zc.*,
		      CASE 
		         WHEN ISNULL(zp.catName) THEN '顶级分类'
		         
		         ELSE zp.catName END AS pcatName
		FROM
			zs_goods_category zc 
            LEFT JOIN zs_goods_category zp ON zc.parentId=zp.id
		where 1=1 
		 <if test="value!=null and value!=''">
		    and	 zc.catName LIKE '%${value}%'
		</if>
		<if test="pid!=null">
		  AND zc.parentId=#{pid}
		</if>
		ORDER BY	zc.catSort DESC
		<if test="page!=null and rows!=null">LIMIT #{page}, #{rows}</if>
		
      <!-- 	SELECT
			zc.id,
			concat(pc.pcatName, '<![CDATA[&]]>', zc.catName) as catName,
			zc.parentId pid,
		    zc.state,
		      zc.catSort
		FROM
			zs_goods_category zc
		RIGHT JOIN (SELECT
				     zp.catName pcatName,
				     zp.id pcatId
			       FROM
				     zs_goods_category zp
			     WHERE
				    zp.parentId = 0
			    ORDER BY
				   zp.catSort DESC
		) AS pc ON zc.parentId = pc.pcatId
		WHERE
		    1=1
		   <if test="value!=null">
		    and	 zc.catName LIKE '%${value}%'
		</if>
		<if test="pid!=null">
		  AND zc.parentId=#{pid}
		</if>
		ORDER BY
			zc.catSort DESC
		LIMIT #{page}, #{rows} -->
  </select>
  <select id="getTotalCountCateInfo" resultType="INTEGER">
      SELECT
			count(1)
		FROM
			zs_goods_category zc
			
		where 1=1
		 <if test="value!=null and value!=''">
		    and	 zc.catName LIKE '%${value}%'
		</if>
		<if test="pid!=null">
		  AND zc.parentId=#{pid}
		</if>
		ORDER BY	zc.catSort DESC
      <!--  SELECT
			count(1)
		FROM
			zs_goods_category zc
		RIGHT JOIN (SELECT
				     zp.catName pcatName,
				     zp.id pcatId
			       FROM
				     zs_goods_category zp
			     WHERE
				    zp.parentId = 0
			    ORDER BY
				   zp.catSort DESC
		) AS pc ON zc.parentId = pc.pcatId
		WHERE
		    1=1
		   <if test="value!=null">
		    and	 zc.catName LIKE '%${value}%'
		</if>
		<if test="pid!=null">
		   AND zc.parentId=#{pid}
		</if>
		ORDER BY
			zc.catSort DESC -->
  
  </select>
  <select id="getPageGoodsTopLevel"  resultMap="BaseResultMap">
  
		   SELECT
			zp.*
		FROM
			zs_goods_category zp
		WHERE
			zp.parentId = #{pid}
			<if test="value!=null">
			  and zp.catName '%${value}%'
			</if>
		ORDER BY
			zp.catSort DESC
  </select>
  <select id="selectParentGoodCateByCateId" resultMap="BaseResultMap">
		 SELECT	zp.* FROM
			zs_goods_category zz
		    LEFT JOIN zs_goods_category zp ON zz.parentId = zp.id
		WHERE
			zz.id = #{id}
  </select>
</mapper>